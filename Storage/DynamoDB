DynamoDB
DynamoDB is a NoSQL document database service that is fully managed. Unlike traditional databases, NoSQL databases, are schema-less. Schema-less simply means that the database doesn't contain a fixed (or rigid) data structure.

Tips
DynamoDB is found under the Database section on the AWS Management Console.
DynamoDB can handle more than 10 trillion requests per day.
DynamoDB is serverless as there are no servers to provision, patch, or manage.
DynamoDB supports key-value and document data models.
DynamoDB synchronously replicates data across three AZs in an AWS Region.
DynamoDB supports GET/PUT operations using a primary key.


According to AWS:

DynamoDB is a managed NoSQL database service that automatically manages the hardware provisioning, setup, configuration, replication, software patching, and cluster scaling.

For in-depth details, refer to the Amazon DynamoDB: How It Works. On this page, let's see how to create a table, and view the details of an existing table.

A. DynamoDB Dashboard
Go to the DynamoDB console, where you can view metrics for all of the tables that exist in your account. Let's start the Create table wizard.


Snapshot: Create your first table

B. Create a Table
Follow the guided steps available on the Create table wizard. See the snapshot below.


Snapshot: Follow the guided steps available on the Create table wizard. Currently, it shows step 1 of 6.

C. Add Data to the Table
Go back to the DynamoDB â†’ Tables dashboard. From the list of all the existing tables, select the one in which you want to add data.


Snapshot: Add data to an existing table, and view more details

The details of the items highlighted in red in the snapshot above are:

1. Create Item
Data can be added in the form of an item.

You can imagine an item as analogous to a row in a relational table for simplicity.

Every item consists of one or more attributes. Each attribute consists of a name, a data type, and a value. One of the attributes serves as the primary key. See a sample item entry below.


Snapshot: Create an item with the Artist and SongTitle attribute. Notice on the upper left corner, you can switch the view between Tree and Text.


Snapshot: The Text view of the same item with the Artist and SongTitle attribute.


Snapshot: A table with five items.

2. Details of an Existing Table
There are several useful features provided to help you manage your data found in DynamoDB. For the selected table, you can view the following information in separate tabs:

Overview - This tab shows high-level details about the table. For example, the table name, partition key, primary sort key (if any), encryption type, and much more. Tables can be encrypted at rest with no overhead. You can also see the region and the Amazon Resource Name (ARN), which is a unique identifier for the current resource.
Items - It lists all of the items/data stored in the table.
Metrics - View the metrics for your table, such as, read/write capacity (units/sec), count of throttled read/write requests, and count of throttled read/write counts.
Alarms - Set up alarms to notify you if you exceed your capacity limits. For each alarm, you will have to specify a metric and the upper threshold.
Capacity - Set up the capacity of the selected table to read and write.
Indexes - Set up the index using a primary key, and project on a set of attributes. Indexes help you to improve querying performance.
Global Tables - When you set up a table as a global table, that table can exist in two or more AWS regions with automatic replication.
Backups - A backup helps in restoring a Point-in-time state. DynamoDB maintains continuous backups of your table for the last 35 days.
Triggers - Create triggers, for example, you can have a lambda function run whenever data is inserted into the current table.
Access control - Set up access control policies (JSON files) that can allow access to the current table from Facebook, Google, or Amazon (not AWS).
External Resource
AWS has a very useful tutorial to get started with DynamoDB. It has the following guided sections:

Step 1: Create a NoSQL Table
Step 2: Add Data to the NoSQL Table
Step 3: Query the NoSQL Table
Step 4: Delete an Existing Item
Step 5: Delete a NoSQL Table
Note - The Create table wizard available on the DynamoDB console also follows step #1 of the tutorial mentioned above.